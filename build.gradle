plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
    maven {url = "https://dl.bintray.com/qameta/maven-unstable/"}
}

def allureVersion = "2.18.1",
    selenideVersion = "6.19.1",
    junitVersion = "5.7.2",
    slf4jVersion = "1.7.32"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "com.codeborne:selenide-appium:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "io.rest-assured:rest-assured:4.3.1",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:3.19.0",
            "com.jcraft:jsch:0.1.55",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            'org.jdom:jdom:2.0.2',
            "mysql:mysql-connector-java:8.0.28",
            "io.appium:java-client:8.5.1",
            'com.fasterxml.jackson.core:jackson-core:2.13.1',
            'com.fasterxml.jackson.core:jackson-databind:2.13.3',
            'io.github.bonigarcia:webdrivermanager:5.2.1',
            // 'com.browserstack:browserstack-java-sdk:1.8.3',
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

